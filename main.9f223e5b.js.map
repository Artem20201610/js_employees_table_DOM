{"version":3,"sources":["scripts/main.js"],"names":["table","document","querySelector","tableRows","tBodies","rows","columnsSortOrder","Map","rowsSorters","rowSelected","sortTextCells","left","right","cellIndex","header","get","cells","innerText","localeCompare","sortNumberCells","sortNumTextCells","convertToNumber","text","slice","split","join","set","tHead","onclick","e","target","sortedRows","sort","append","row","closest","classList","toggle","contains","saveForm","createElement","labelNames","inputNames","submit","add","i","length","label","input","appendChild","createTextNode","innerHTML","getSelectOptions","setAttribute","required","formatSalary","salary","toLocaleString","pushNotification","posTop","posRight","title","description","type","notification","notificationTitle","notificationMsg","className","dataset","qa","style","top","zIndex","fontSize","body","setTimeout","remove","preventDefault","newEmployee","FormData","newRow","inputName","employeeName","insertCell","cell","age","addEventListener","cellToEdit","initialValue","cellInput","onblur","value","onkeydown","ev","code","blur"],"mappings":"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","file":"main.9f223e5b.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst table = document.querySelector('table');\nconst tableRows = table.tBodies[0].rows;\nconst columnsSortOrder = new Map();\nconst rowsSorters = new Map();\nlet rowSelected = null;\n\ncolumnsSortOrder.set('Name', false);\ncolumnsSortOrder.set('Position', false);\ncolumnsSortOrder.set('Office', false);\ncolumnsSortOrder.set('Age', false);\ncolumnsSortOrder.set('Salary', false);\n\nrowsSorters.set('Name', sortTextCells);\nrowsSorters.set('Position', sortTextCells);\nrowsSorters.set('Office', sortTextCells);\nrowsSorters.set('Age', sortNumberCells);\nrowsSorters.set('Salary', sortNumTextCells);\n\ntable.tHead.onclick = (e) => {\n  const cellIndex = e.target.cellIndex;\n  const header = e.target.innerText;\n  const sortedRows = [...tableRows];\n\n  sortedRows.sort((left, right) =>\n    rowsSorters.get(header)(left, right, cellIndex, header)\n  );\n\n  columnsSortOrder.set(header, !columnsSortOrder.get(header));\n\n  table.tBodies[0].append(...sortedRows);\n};\n\nfunction sortTextCells(left, right, cellIndex, header) {\n  if (!columnsSortOrder.get(header)) {\n    return left.cells[cellIndex].innerText\n      .localeCompare(right.cells[cellIndex].innerText);\n  } else {\n    return right.cells[cellIndex].innerText\n      .localeCompare(left.cells[cellIndex].innerText);\n  }\n}\n\nfunction sortNumberCells(left, right, cellIndex, header) {\n  if (!columnsSortOrder.get(header)) {\n    return left.cells[cellIndex].innerText\n      - right.cells[cellIndex].innerText;\n  } else {\n    return right.cells[cellIndex].innerText\n      - left.cells[cellIndex].innerText;\n  }\n}\n\nfunction sortNumTextCells(left, right, cellIndex, header) {\n  if (!columnsSortOrder.get(header)) {\n    return convertToNumber(left.cells[cellIndex].innerText)\n      - convertToNumber(right.cells[cellIndex].innerText);\n  } else {\n    return convertToNumber(right.cells[cellIndex].innerText)\n      - convertToNumber(left.cells[cellIndex].innerText);\n  }\n}\n\nfunction convertToNumber(text) {\n  return +text.slice(1).split(',').join('');\n}\n\ntable.tBodies[0].onclick = (e) => {\n  const row = e.target.closest('tr');\n\n  if (!row) {\n    return;\n  }\n\n  if (!rowSelected) {\n    rowSelected = row;\n    row.classList.toggle('active');\n\n    return;\n  }\n\n  if (row !== rowSelected) {\n    rowSelected.classList.toggle('active');\n    row.classList.toggle('active');\n    rowSelected = row;\n\n    return;\n  }\n\n  row.classList.toggle('active');\n\n  if (!row.classList.contains('active')) {\n    rowSelected = null;\n  }\n};\n\nconst saveForm = document.createElement('form');\nconst labelNames = ['Name', 'Position', 'Office', 'Age', 'Salary'];\nconst inputNames = ['name', 'position', 'office', 'age', 'salary'];\nconst submit = document.createElement('button');\n\nsaveForm.classList.add('new-employee-form');\n\nfor (let i = 0; i < labelNames.length; i++) {\n  const label = document.createElement('label');\n  let input;\n\n  label.appendChild(document.createTextNode(`${labelNames[i]}:`));\n\n  switch (inputNames[i]) {\n    case 'office':\n      input = document.createElement('select');\n      input.innerHTML = getSelectOptions();\n      break;\n    case 'age':\n    case 'salary':\n      input = document.createElement('input');\n      input.setAttribute('type', 'number');\n      break;\n    default:\n      input = document.createElement('input');\n      input.setAttribute('type', 'text');\n  }\n\n  input.setAttribute('name', inputNames[i]);\n  input.setAttribute('data-qa', inputNames[i]);\n  input.required = true;\n  label.appendChild(input);\n\n  saveForm.appendChild(label);\n}\n\nsubmit.innerText = 'Save to table';\n\nsubmit.onclick = (e) => {\n  e.preventDefault();\n\n  const newEmployee = new FormData(saveForm);\n  const newRow = document.createElement('tr');\n\n  for (const inputName of inputNames) {\n    switch (inputName) {\n      case 'name': {\n        const employeeName = newEmployee.get(inputName);\n\n        if (employeeName.length < 4) {\n          pushNotification(450, 10, 'Error', 'Name must be >= 4', 'error');\n\n          return;\n        }\n\n        const cell = newRow.insertCell();\n\n        cell.innerText = employeeName;\n\n        break;\n      }\n\n      case 'position': {\n        const cell = newRow.insertCell();\n\n        cell.innerText = newEmployee.get(inputName);\n\n        if (cell.innerText === '') {\n          pushNotification(10, 10, 'Error', 'Empty position', 'error');\n\n          return;\n        }\n\n        break;\n      }\n\n      case 'office': {\n        const cell = newRow.insertCell();\n\n        cell.innerText = newEmployee.get(inputName);\n\n        break;\n      }\n\n      case 'age': {\n        const age = +newEmployee.get(inputName);\n\n        if ((age < 18) || (age > 90)) {\n          pushNotification(\n            10,\n            10,\n            'Error',\n            'Age must be between 18 & 90',\n            'error'\n          );\n\n          return;\n        }\n\n        const cell = newRow.insertCell();\n\n        cell.innerText = age;\n\n        break;\n      }\n\n      case 'salary': {\n        const cell = newRow.insertCell();\n\n        cell.innerText = formatSalary(newEmployee.get('salary'));\n\n        break;\n      }\n    }\n  }\n\n  table.tBodies[0].append(newRow);\n\n  pushNotification(450, 10, 'Success', 'New employee was added', 'success');\n};\n\nsaveForm.appendChild(submit);\ndocument.body.appendChild(saveForm);\n\nfunction getSelectOptions() {\n  return `<option value=\"Tokyo\" selected>Tokyo</option>\n  <option value=\"Singapore\">Singapore</option>\n  <option value=\"London\">London</option>\n  <option value=\"New York\">New York</option>\n  <option value=\"Edinburgh\">Edinburgh</option>\n  <option value=\"San Francisco\">San Francisco</option>`;\n}\n\nfunction formatSalary(salary) {\n  const formated = (+salary).toLocaleString('en-US');\n\n  return '$' + formated;\n}\n\nfunction pushNotification(posTop, posRight, title, description, type) {\n  const notification = document.createElement('div');\n  const notificationTitle = document.createElement('h2');\n  const notificationMsg = document.createElement('p');\n\n  notification.className = 'notification ' + type;\n  notification.dataset.qa = 'notification';\n  notification.style.top = `${posTop}px`;\n  notification.style.right = `${posRight}px`;\n  notification.style.zIndex = 4;\n  notificationTitle.className = 'title';\n  notificationTitle.innerHTML = title;\n  notificationTitle.style.fontSize = '18px';\n  notificationMsg.innerHTML = description;\n\n  notification.append(notificationTitle);\n  notification.append(notificationMsg);\n\n  document.body.append(notification);\n\n  setTimeout(() => {\n    notification.remove();\n  }, 2000);\n}\n\ntable.tBodies[0].addEventListener('dblclick', e => {\n  const cellToEdit = e.target;\n  const initialValue = cellToEdit.innerHTML;\n\n  cellToEdit.innerHTML = `\n    <input\n      name=\"cell-input\"\n      class=\"cell-input\"\n      type=\"text\"\n      value=\"${initialValue}\"\n    >\n  `;\n\n  const cellInput = document.querySelector('.cell-input');\n\n  cellInput.onblur = function() {\n    cellToEdit.innerHTML = cellInput.value || initialValue;\n    cellInput.remove();\n  };\n\n  cellInput.onkeydown = function(ev) {\n    if (ev.code === 'Enter') {\n      cellInput.blur();\n    }\n  };\n});\n"]}